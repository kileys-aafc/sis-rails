#!/usr/bin/perl
#
#

require "ctime.pl";
$Date = &ctime(time);

if ($ENV{'REQUEST_METHOD'} eq "POST") {
	$form = <STDIN>;
} else { 
	$form = $ENV{'QUERY_STRING'};
}
@pairs = split(/&/,$form);

foreach $pair (@pairs)
{
	($name, $value) = split(/=/,$pair);

	$value =~ s/\+/ /g;
	
	$value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;	
	$value =~ s/~!/ ~!/g;
	$value =~ tr/a-z/A-Z/;
	$test{$name} .= $value;
	

}

if ($test{LEVEL} eq "ECODISTRICT") {$filename = "DT";}
if ($test{LEVEL} eq "ECOREGION") {$filename = "RG";}
if ($test{LEVEL} eq "ECOPROVINCE") {$filename = "PR";}
if ($test{LEVEL} eq "ECOZONE") {$filename = "ZN";}

print "Content-type: text/html\n\n";
print "<HTML>\n";
print "<HEAD>\n";
print "<TITLE>Rollup $test{ITEM} to $test{LEVEL}</TITLE>\n";
print "</HEAD>\n";
print "<BODY>\n";
print "<PRE>\n";
print "<H1>/* AML to rollup $test{ITEM} to $test{LEVEL}</H1>\n";
print "\n";
print "/* input: rollup_level = $test{LEVEL}\n";
print "/*        rollup item = $test{ITEM}\n";
print "/*        component file = $test{CMP}\n";
print "/*        new component file = $test{COVER}.$test{ITEM}\n";
print "/*        coverage = $test{COVER}\n";
print "/* calc:  filename = $filename.$test{ITEM}\n";
print "/* assume: component table polygon identifier is SL\n";
print "/*         percent distribution = PERCENT\n";
print "/*         area is LAND_AREA in the LAT\n";
print "/*         linkage key = SL\n";
print "/*         version 2.2 ECODISTRICT,ECODISTPROV,ECOREGION,ECOZONE tables \n";
print "/*         The $test{COVER}.ECODISTPROV table exists, and includes the item ECOPROV\n";
print "/*         A Lambert Azimuthal version of the SLC exists (SLCLAZ.PAT) \n";
print "\n";
print "<H3>&type erase old files</H3>\n";
print "&if [EXISTS $filename.$test{ITEM} -INFO] &then &if [DELETE $filename.$test{ITEM} -INFO] = 0 &then\n";
print "   &type  * $filename.$test{ITEM} deleted\n";
print "\n";
print "<H2>&type create duplicate component records for all polygons split by ecostrat in AB</H2>\n";
print "&if [EXISTS $test{COVER}.$test{ITEM} -INFO] &then \n";
print "      &type $test{COVER}.$test{ITEM} file exists\n";
print "&else \n";
print "   &do\n";
print "\n";
print "<H3>            &type create duplicate component records</H3>\n";
print "      copyinfo $test{COVER}.PAT $test{COVER}.PAT2 \n";
print "      copyinfo $test{CMP} $test{COVER}.$test{ITEM} \n";
print "      &data ARC INFO\n";
print "      ARC\n";
print "      SELECT $test{COVER}.PAT2\n";
print "      SORT ON SL\n";
print "      SELECT $test{COVER}.$test{ITEM}\n";
print "      SORT ON SL\n";
print "      CALC \$NM = 1\n";
print "      RELATE $test{COVER}.PAT2 1 BY SL WITH SEQUENTIAL\n";
print "      NEXT 1\n";
print "      OUTPUT NEWCMP INIT\n";
print "      LI \$1ECODISTRICT,SL,CMP,PERCENT,$test{ITEM} PRINT\n";
print "      Q STOP\n";
print "      &end\n";
print "      tables\n";
print "      kill $test{COVER}.PAT2\n";
print "      q\n";
print "\n";
print "<H3>            &type trim out \$recno,blanks,title in output file</H3>\n";
print "      cat info/newcmp | cut -c 11- > info/newcmp.2\n";
print "      cat info/newcmp.2 | cut -c 1-4,13-18,20-21,24-26,32- > info/newcmp.3\n";
print "      tail -n+2 info/newcmp.3 > info/newcmp.4\n";
print "\n";
print "<H3>            &type prepare template for new info file</H3>\n";
print "      &data ARC INFO\n";
print "      ARC\n";
print "      SELECT $test{COVER}.$test{ITEM}\n";
print "      PURGE\n";
print "      Y\n";
print "      Q STOP\n";
print "      &end\n";
print "      &if [ITEMINFO $test{COVER}.$test{ITEM} -INFO KINDMAT -EXISTS] &then \n";
print "        &do\n";
print "          &type item KINDMAT exists in $test{COVER}.$test{ITEM}, assuming SLC.CMP items exist.\n";
print "          &type Removing unwanted items\n";
if ($test{ITEM} ne "KINDMAT") {print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} KINDMAT\n";}
if ($test{ITEM} ne "VEGET")   {print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} VEGET\n";}
if ($test{ITEM} ne "PMDEP")   {print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} PMDEP\n";}
if ($test{ITEM} ne "CFRAG")   {print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} CFRAG\n";}
if ($test{ITEM} ne "ROOTDP")  {print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} ROOTDP\n";}
if ($test{ITEM} ne "DRAIN")   {print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} DRAIN\n";}
if ($test{ITEM} ne "DEVEL")   {print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} DEVEL\n";}
if ($test{ITEM} ne "CALC")    {print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} CALC\n";}
if ($test{ITEM} ne "LOCSF")   {print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} LOCSF\n";}
if ($test{ITEM} ne "SLOPE")   {print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} SLOPE\n";}
print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} SNF\n";
print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} SOIL_CODE\n";
print "          dropitem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} MODIFIER\n";
print "        &end\n";
print "      &else \n";
print "        &do\n";
print "          &type Nonstandard component file.  Keeping all items.\n";
print "        &end\n";
print "      additem  $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} ECODISTRICT 4 4 I # \$RECNO\n";
print "\n";
print "<H3>            &type import data into new info file</H3>\n";
print "      &data ARC INFO\n";
print "      ARC\n";
print "      SEL $test{COVER}.$test{ITEM}\n";
print "      GET NEWCMP.4 COPY ASCII\n";
print "      Q STOP\n";
print "      &end\n";
print "\n";
print "<H3>            &type join the ecostratification hierarchy to the Component Table</H3>\n";
print "      additem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} ECOREGION 3 3 I\n";
print "      additem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} ECOPROVINCE 4 4 N 1\n";
print "      additem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} ECOZONE 2 2 I\n";
print "      &data ARC INFO\n";
print "      ARC\n";
print "      SELECT $test{COVER}.ECODISTRICT\n";
print "      SORT ON ECODISTRICT\n";
print "      SELECT $test{COVER}.$test{ITEM}\n";
print "      SORT ON ECODISTRICT\n";
print "      RELATE $test{COVER}.ECODISTRICT 1 BY ECODISTRICT WITH SEQUENTIAL\n";
print "      CALC ECOREGION = \$1ECOREGION\n";
print "      SELECT $test{COVER}.ECODISTPROV\n";
print "      SORT ON ECODISTRICT\n";
print "      SELECT $test{COVER}.$test{ITEM}\n";
print "      SORT ON ECODISTRICT\n";
print "      RELATE $test{COVER}.ECODISTPROV 1 BY ECODISTRICT WITH SEQUENTIAL\n";
print "      CALC ECOPROVINCE = \$1ECOPROVINCE\n";
print "      SELECT $test{COVER}.ECOREGION\n";
print "      SORT ON ECOREGION\n";
print "      SELECT $test{COVER}.$test{ITEM}\n";
print "      SORT ON ECOREGION\n";
print "      RELATE $test{COVER}.ECOREGION 1 BY ECOREGION WITH SEQUENTIAL\n";
print "      CALC ECOZONE = \$1ECOZONE\n";
print "      Q STOP\n";
print "      &end\n";
print "   &end\n";
print "\n";
print "<H2>&type generate one record per $test{LEVEL}-SL combination</H2>\n";
print "/* this process is necessary because of non-nesting in Alberta\n";
print "/* &if [EXISTS SLCLAZ.PAT -INFO] &then &type SLCLAZ.PAT file exists\n";
print "/* &else project cover slc slclaz dd2laz.proj\n";
print "\n";
print "<H3>&type join the ecostratification hierarchy to the SLCLAZ.PAT table</H3>\n";
print "additem SLCLAZ.PAT  SLCLAZ.PAT2 ECOREGION 3 3 I\n";
print "additem SLCLAZ.PAT2 SLCLAZ.PAT2 ECOPROVINCE 4 4 N 1\n";
print "additem SLCLAZ.PAT2 SLCLAZ.PAT2 ECOZONE 2 2 I\n";
print "&data ARC INFO\n";
print "ARC\n";
print "SELECT $test{COVER}.ECODISTRICT\n";
print "SORT ON ECODISTRICT\n";
print "SELECT SLCLAZ.PAT2\n";
print "RESEL SL = 0\n";
print "PURGE\n";
print "Y\n";
print "SORT ON ECODISTRICT\n";
print "RELATE $test{COVER}.ECODISTRICT 1 BY ECODISTRICT WITH SEQUENTIAL\n";
print "CALC ECOREGION = \$1ECOREGION\n";
print "SELECT $test{COVER}.ECODISTPROV\n";
print "SORT ON ECODISTRICT\n";
print "SELECT SLCLAZ.PAT2\n";
print "SORT ON ECODISTRICT\n";
print "RELATE $test{COVER}.ECODISTPROV 1 BY ECODISTRICT WITH SEQUENTIAL\n";
print "CALC ECOPROVINCE = \$1ECOPROVINCE\n";
print "SELECT $test{COVER}.ECOREGION\n";
print "SORT ON ECOREGION\n";
print "SELECT SLCLAZ.PAT2\n";
print "SORT ON ECOREGION\n";
print "RELATE $test{COVER}.ECOREGION 1 BY ECOREGION WITH SEQUENTIAL\n";
print "CALC ECOZONE = \$1ECOZONE\n";
print "Q STOP\n";
print "&end\n";
print "\n";
print "<H3>&type rollup</H3>\n";
print "additem SLCLAZ.PAT2 SLCLAZ.PAT2 ROLLUP 10 10 C\n";
print "&data ARC INFO\n";
print "ARC\n";
print "SEL SLCLAZ.PAT2\n";
print "CONCATENATE ROLLUP FROM $test{LEVEL},SL\n";
print "Q STOP\n";
print "&end\n";
print "frequency SLCLAZ.PAT2 SLCLAZ.PAT3\n";
print "ROLLUP\n";
print "end\n";
print "AREA\n";
print "end\n";
print "\n";
print "<H2>&type Convert percent to LAND_AREA</H2>\n";
print "&if [ITEMINFO $test{COVER}.$test{ITEM} -INFO ROLLUP -EXISTS] &then \n";
print "      &type item ROLLUP exists in $test{COVER}.$test{ITEM}\n";
print "&else \n";
print "   &do\n";
print "      additem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} ROLLUP 10 10 C\n";
print "      additem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} LAND_AREA 9 9 I\n";
print "      additem $test{COVER}.$test{ITEM} $test{COVER}.$test{ITEM} CMP_AREA 9 9 I\n";
print "    &end\n";
print "&data ARC INFO\n";
print "ARC\n";
print "SEL SLCLAZ.PAT3\n";
print "SORT ON ROLLUP\n";
print "SEL $test{COVER}.$test{ITEM}\n";
print "CONCATENATE ROLLUP FROM $test{LEVEL},SL\n";
print "SORT ON ROLLUP\n";
print "RELATE SLCLAZ.PAT3 1 BY ROLLUP WITH SEQUENTIAL\n";
print "CALC LAND_AREA = \$1AREA / 10000\n";
print "SEL $test{COVER}.$test{ITEM}\n";
print "CALC CMP_AREA = LAND_AREA * PERCENT / 100\n";
print "Q STOP\n";
print "&end\n";
print "\n";
print "<H2>&type summarize the contents of $test{ITEM} by polygon</H2>\n";
print "&data ARC INFO\n";
print "ARC\n";
print "SELECT $test{COVER}.$test{ITEM}\n";
print "CONCATENATE ROLLUP FROM $test{LEVEL},$test{ITEM}\n";
print "Q STOP\n";
print "&end\n";
print "\n";
print "frequency $test{COVER}.$test{ITEM} $filename.$test{ITEM}\n";
print "ROLLUP\n";
print "$test{LEVEL}\n";
print "$test{ITEM}\n";
print "end\n";
print "CMP_AREA\n";
print "end\n";
print "frequency $filename.$test{ITEM} $test{ITEM}.SUM\n";
print "$test{LEVEL}\n";
print "end\n";
print "CMP_AREA\n";
print "end\n";
print "\n";
print "<H2>&type convert LAND_AREA back to percent</H2>\n";
print "<H3>&type get total LAND_AREA by rollup unit</H3>\n";
print "additem $filename.$test{ITEM} $filename.$test{ITEM} SUM_AREA 9 9 I\n";
print "&data ARC INFO\n";
print "ARC\n";
print "SEL $test{ITEM}.SUM\n";
print "SORT ON $test{LEVEL}\n";
print "SEL $filename.$test{ITEM}\n";
print "SORT ON $test{LEVEL}\n";
print "RELATE $test{ITEM}.SUM 1 BY $test{LEVEL} WITH SEQUENTIAL\n";
print "CALC SUM_AREA = \$1CMP_AREA\n";
print "Q STOP\n";
print "&end\n";
print "\n";
print "<H3>&type calculate percent</H3>\n";
print "additem $filename.$test{ITEM} $filename.$test{ITEM} PERCENT 3 3 I # $test{LEVEL}\n";
print "&data ARC INFO\n";
print "ARC\n";
print "SEL $filename.$test{ITEM}\n";
print "CALC PERCENT = ( CMP_AREA / SUM_AREA * 100 ) + 0.5\n";
print "Q STOP\n";
print "&end\n";
print "\n";
print "<H3>&type get rid of the 0 percent values</H3>\n";
print "&data ARC INFO\n";
print "ARC\n";
print "SEL $filename.$test{ITEM}\n";
print "RESEL PERCENT = 0\n";
print "PURGE\n";
print "Y\n";
print "Q STOP\n";
print "&end\n";
print "\n";
print "<H2>&type Number the components</H2>\n";
print "\n";
print "/* Use the difference between the system \$snrec for each component\n";
print "/* and the lowest system \$snrec for each SL\n";
print "additem $filename.$test{ITEM} $filename.$test{ITEM} CMP 2 2 I # $test{LEVEL}\n";
print "additem $test{ITEM}.SUM $test{ITEM}.SUM LOWEST 6 6 I\n";
print "&data ARC INFO\n";
print "ARC\n";
print "CALC \$NM = 1\n";
print "SEL $filename.$test{ITEM}\n";
print "SORT ON $test{LEVEL},PERCENT (D)\n";
print "SEL $test{ITEM}.SUM\n";
print "SORT ON $test{LEVEL}\n";
print "RELATE 1 $filename.$test{ITEM} BY $test{LEVEL} ORDERED\n";
print "CALCULATE \$IDX2 = 2\n";
print "CALCULATE LOWEST = \$SNREC\n";
print "SEL $filename.$test{ITEM}\n";
print "RELATE 1 $test{ITEM}.SUM BY $test{LEVEL} ORDERED\n";
print "CALC CMP = \$RECNO - \$1LOWEST + 1\n";
print "Q STOP\n";
print "&end\n";
print "\n";
print "<H2>&type get total percentages to equal 100</H2>\n";
print "<H3>&type calculate total percentages</H3>\n";
print "frequency $filename.$test{ITEM} TOTAL.PERCENT\n";
print "$test{LEVEL}\n";
print "end\n";
print "PERCENT\n";
print "end\n";
print "\n";
print "<H3>&type add uncorrected totals to $filename.$test{ITEM} and prorate percent</H3>\n";
print "additem $filename.$test{ITEM} $filename.$test{ITEM} TOTAL.PERCENT 3 3 I \n";
print "&data ARC INFO\n";
print "ARC\n";
print "SEL TOTAL.PERCENT\n";
print "SORT ON $test{LEVEL}\n";
print "SEL $filename.$test{ITEM}\n";
print "SORT ON $test{LEVEL}\n";
print "RELATE TOTAL.PERCENT 1 BY $test{LEVEL} WITH SEQUENTIAL\n";
print "CALC TOTAL.PERCENT = \$1PERCENT\n";
print "CALC PERCENT = ( PERCENT * 100 / TOTAL.PERCENT ) + 0.5\n";
print "Q STOP\n";
print "&end\n";
print "\n";
print "<H3>&type recalc totals to confirm</H3>\n";
print "frequency $filename.$test{ITEM} TOTAL.PERCENT2\n";
print "$test{LEVEL}\n";
print "end\n";
print "PERCENT\n";
print "end\n";
print "\n";
print "<H3>&type correct remaining problems</H3>\n";
print "additem TOTAL.PERCENT2 TOTAL.PERCENT2 SHORT 3 3 I\n";
print "additem TOTAL.PERCENT2 TOTAL.PERCENT2 LONG 3 3 I\n";
print "&data ARC INFO\n";
print "ARC\n";
print "CALC \$NM = 1\n";
print "SEL TOTAL.PERCENT2\n";
print "SORT ON $test{LEVEL}\n";
print "CALC SHORT = 100 - PERCENT\n";
print "CALC LONG  = PERCENT - 100\n";
print "SEL $filename.$test{ITEM}\n";
print "SORT ON $test{LEVEL}\n";
print "RELATE 1 TOTAL.PERCENT2 BY $test{LEVEL} ORDERED\n";
print "RESEL CMP LE \$1SHORT\n";
print "CALC PERCENT = PERCENT + 1\n";
print "ASEL\n";
print "RESEL CMP LE \$1LONG\n";
print "CALC PERCENT = PERCENT - 1\n";
print "Q STOP\n";
print "&end\n";
print "\n";
print "<H2>&type clean up</H2>\n";
print "tables\n";
print "kill SLCLAZ.PAT2\n";
print "kill SLCLAZ.PAT3\n";
print "kill $test{ITEM}.SUM\n";
print "kill TOTAL.PERCENT\n";
print "kill TOTAL.PERCENT2\n";
print "quit\n";
print "dropitem $filename.$test{ITEM} $filename.$test{ITEM} CASE#\n";
print "dropitem $filename.$test{ITEM} $filename.$test{ITEM} FREQUENCY\n";
print "dropitem $filename.$test{ITEM} $filename.$test{ITEM} ROLLUP\n";
print "dropitem $filename.$test{ITEM} $filename.$test{ITEM} CMP_AREA\n";
print "dropitem $filename.$test{ITEM} $filename.$test{ITEM} SUM_AREA\n";
print "dropitem $filename.$test{ITEM} $filename.$test{ITEM} TOTAL.PERCENT\n";
print "\n";
print "&type FINISHED MAKING $filename.$test{ITEM} \n";
print "\n";
print "/* This AML was developed for ARC/INFO version 7.0.4 \n";
print "<ADDRESS>\n";
print "/* <I>Source:  <A HREF=\"/cansis/citations/schut.html\">Peter Schut</A>\n";
print "<BR>/* Contact: <A HREF=\"/cansis/org/head.html\">Head, CanSIS</A>\n";
print "<BR>/* Updated:</I> 1998.02.04\n";
print "<BR>/* Generated:</I> $Date\n";
print "</ADDRESS>\n";
print "</BODY>\n";
print "</HTML>\n";

